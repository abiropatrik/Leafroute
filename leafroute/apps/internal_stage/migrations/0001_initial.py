# Generated by Django 5.2.5 on 2025-09-27 11:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City_ST',
            fields=[
                ('city_id', models.AutoField(db_column='CityID', primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('continent', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('has_airport', models.CharField(blank=True, max_length=255, null=True)),
                ('has_harbour', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude_coordinate', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude_coordinate', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Cities_ST',
            },
        ),
        migrations.CreateModel(
            name='Product_ST',
            fields=[
                ('product_id', models.AutoField(db_column='ProductID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_price', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('is_alive', models.CharField(blank=True, max_length=255, null=True)),
                ('is_liquid', models.CharField(blank=True, max_length=255, null=True)),
                ('is_hazardous', models.CharField(blank=True, max_length=255, null=True)),
                ('is_time_sensitive', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Products_ST',
            },
        ),
        migrations.CreateModel(
            name='Route_ST',
            fields=[
                ('route_id', models.AutoField(db_column='RouteID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Routes_ST',
            },
        ),
        migrations.CreateModel(
            name='Address_ST',
            fields=[
                ('address_id', models.AutoField(db_column='AddressID', primary_key=True, serialize=False)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('house_number', models.CharField(blank=True, max_length=255, null=True)),
                ('institution_name', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.ForeignKey(db_column='CityID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.city_st')),
            ],
            options={
                'db_table': 'Addresses_ST',
            },
        ),
        migrations.CreateModel(
            name='RoutePart_ST',
            fields=[
                ('route_part_id', models.AutoField(db_column='RoutePartID', primary_key=True, serialize=False)),
                ('distance', models.CharField(blank=True, max_length=255, null=True)),
                ('transport_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('route_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('end_address', models.ForeignKey(db_column='EndAddressID', on_delete=django.db.models.deletion.CASCADE, related_name='routepart_end', to='internal_stage.address_st')),
                ('route', models.ForeignKey(db_column='RouteID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.route_st')),
                ('start_address', models.ForeignKey(db_column='StartAddressID', on_delete=django.db.models.deletion.CASCADE, related_name='routepart_start', to='internal_stage.address_st')),
            ],
            options={
                'db_table': 'RouteParts_ST',
            },
        ),
        migrations.CreateModel(
            name='UserProfile_ST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_full_name_displayed', models.BooleanField(default=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job', models.CharField(blank=True, max_length=255, null=True)),
                ('rights', models.CharField(blank=True, max_length=255, null=True)),
                ('hiring_date', models.CharField(blank=True, max_length=255, null=True)),
                ('co2_saved', models.CharField(blank=True, max_length=255, null=True)),
                ('salary', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.ForeignKey(blank=True, db_column='AddressID', null=True, on_delete=django.db.models.deletion.CASCADE, to='internal_stage.address_st')),
                ('user', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, related_name='stage_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Users_ST',
                'permissions': [('admin_tasks', 'Is able to proceed with admin related tasks'), ('organiser_tasks', 'Is able to proceed with tasks related to organisers'), ('driver_tasks', 'Is able to proceed with tasks related to drivers'), ('warehouseman_tasks', 'Is able to proceed with tasks related to warehousemen'), ('manager_tasks', 'Is able to proceed with tasks related to managers')],
            },
        ),
        migrations.CreateModel(
            name='Order_ST',
            fields=[
                ('order_id', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('quantity', models.CharField(blank=True, max_length=255, null=True)),
                ('order_date', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_fullfillment_date', models.CharField(blank=True, max_length=255, null=True)),
                ('fulfillment_date', models.CharField(blank=True, max_length=255, null=True)),
                ('order_status', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_co2_emission', models.CharField(blank=True, max_length=255, null=True)),
                ('co2_emmission', models.CharField(blank=True, max_length=255, null=True)),
                ('cost', models.CharField(blank=True, max_length=255, null=True)),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.product_st')),
                ('route', models.ForeignKey(db_column='RouteID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.route_st')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.userprofile_st')),
            ],
            options={
                'db_table': 'Orders_ST',
            },
        ),
        migrations.CreateModel(
            name='Vehicle_ST',
            fields=[
                ('vehicle_id', models.AutoField(db_column='VehicleID', primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('production_year', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('fuel_type', models.CharField(blank=True, max_length=255, null=True)),
                ('consumption', models.CharField(blank=True, max_length=255, null=True)),
                ('full_capacity', models.CharField(blank=True, max_length=255, null=True)),
                ('free_capacity', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('avg_distance_per_hour', models.CharField(blank=True, max_length=255, null=True)),
                ('fuel_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.ForeignKey(blank=True, db_column='AddressID', null=True, on_delete=django.db.models.deletion.CASCADE, to='internal_stage.address_st')),
            ],
            options={
                'db_table': 'Vehicles_ST',
            },
        ),
        migrations.CreateModel(
            name='Shipment_ST',
            fields=[
                ('shipment_id', models.AutoField(db_column='ShipmentID', primary_key=True, serialize=False)),
                ('shipment_start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_end_date', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity_transported', models.CharField(blank=True, max_length=255, null=True)),
                ('fuel_consumed', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('co2_emission', models.CharField(blank=True, max_length=255, null=True)),
                ('transport_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.order_st')),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.product_st')),
                ('route_part', models.ForeignKey(db_column='RoutePartsID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.routepart_st')),
                ('vehicle', models.ForeignKey(db_column='VehicleID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.vehicle_st')),
            ],
            options={
                'db_table': 'Shipments_ST',
            },
        ),
        migrations.CreateModel(
            name='Warehouse_ST',
            fields=[
                ('warehouse_id', models.AutoField(db_column='WarehouseID', primary_key=True, serialize=False)),
                ('capacity', models.CharField(blank=True, max_length=255, null=True)),
                ('fullness', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.ForeignKey(db_column='AddressID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.address_st')),
            ],
            options={
                'db_table': 'Warehouses_ST',
            },
        ),
        migrations.CreateModel(
            name='WarehouseConnection_ST',
            fields=[
                ('warehouse_connection_id', models.AutoField(db_column='WarehouseConnectionID', primary_key=True, serialize=False)),
                ('is_in_different_country', models.CharField(blank=True, max_length=255, null=True)),
                ('is_in_different_continent', models.CharField(blank=True, max_length=255, null=True)),
                ('warehouse1', models.ForeignKey(db_column='Warehouse1', on_delete=django.db.models.deletion.CASCADE, related_name='connection_warehouse1', to='internal_stage.warehouse_st')),
                ('warehouse2', models.ForeignKey(db_column='Warehouse2', on_delete=django.db.models.deletion.CASCADE, related_name='connection_warehouse2', to='internal_stage.warehouse_st')),
            ],
            options={
                'db_table': 'WarehouseConnections_ST',
            },
        ),
        migrations.AddField(
            model_name='route_st',
            name='warehouse_connection',
            field=models.ForeignKey(db_column='WarehouseConnectionID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.warehouseconnection_st'),
        ),
        migrations.AddField(
            model_name='order_st',
            name='warehouse_connection',
            field=models.ForeignKey(db_column='WarehouseConnectionID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.warehouseconnection_st'),
        ),
        migrations.CreateModel(
            name='WorkSchedule_ST',
            fields=[
                ('schedule_id', models.AutoField(db_column='Schedule_id', primary_key=True, serialize=False)),
                ('work_day', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_time', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(db_column='User_id', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.userprofile_st')),
            ],
            options={
                'db_table': 'WorkSchedules_ST',
            },
        ),
        migrations.CreateModel(
            name='UserShipments_ST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment', models.ForeignKey(db_column='ShipmentID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.shipment_st')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.userprofile_st')),
            ],
            options={
                'db_table': 'UserShipments_ST',
                'unique_together': {('user', 'shipment')},
            },
        ),
        migrations.CreateModel(
            name='WarehouseProduct_ST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_stock', models.CharField(blank=True, max_length=255, null=True)),
                ('reserved_stock', models.CharField(blank=True, max_length=255, null=True)),
                ('product', models.ForeignKey(db_column='PRODUCTID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.product_st')),
                ('warehouse', models.ForeignKey(db_column='WAREHOUSEID', on_delete=django.db.models.deletion.CASCADE, to='internal_stage.warehouse_st')),
            ],
            options={
                'db_table': 'WarehouseProducts_ST',
                'unique_together': {('product', 'warehouse')},
            },
        ),
    ]
